/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */
package io.swagger.client.api

import io.swagger.client.model.Employee
import io.swagger.client.model.Employee1
import io.swagger.client.model.InlineResponse200
import io.swagger.client.model.InlineResponse2001
import io.swagger.client.model.InlineResponse2002
import io.swagger.client.model.&#x60;404Response&#x60;
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object DefaultApi {

  /**
   * Allows users to get employees
   * 
   * Expected answers:
   *   code 200 : InlineResponse200 (OK)
   *   code 404 : &#x60;404Response&#x60; (Bad Request)
   * 
   * @param uUID UUID number of employee
   * @param firstName Users first name
   * @param lastName Users last name
   */
  def usersGet(uUID: String, firstName: Option[String] = None, lastName: Option[String] = None): ApiRequest[InlineResponse200] =
    ApiRequest[InlineResponse200](ApiMethods.GET, "https://localhost", "/users", "application/json")
      .withQueryParam("UUID", uUID)
      .withQueryParam("first_name", firstName)
      .withQueryParam("last_name", lastName)
      .withSuccessResponse[InlineResponse200](200)
      .withErrorResponse[&#x60;404Response&#x60;](404)
        /**
   * Allows user to submit user data to the DB
   * 
   * Expected answers:
   *   code 200 : InlineResponse2002 (OK)
   *   code 404 : &#x60;404Response&#x60; (Bad Request)
   * 
   * @param employee Creates a new employee in DB
   */
  def usersPost(employee: Option[Employee1] = None): ApiRequest[InlineResponse2002] =
    ApiRequest[InlineResponse2002](ApiMethods.POST, "https://localhost", "/users", "application/json")
      .withBody(employee)
      .withSuccessResponse[InlineResponse2002](200)
      .withErrorResponse[&#x60;404Response&#x60;](404)
        /**
   * Allows users to update user data to the DB
   * 
   * Expected answers:
   *   code 200 : InlineResponse2001 (resource successfully added)
   * 
   * @param employee Updates an employee in DB
   */
  def usersPut(employee: Option[Employee] = None): ApiRequest[InlineResponse2001] =
    ApiRequest[InlineResponse2001](ApiMethods.PUT, "https://localhost", "/users", "application/json")
      .withBody(employee)
      .withSuccessResponse[InlineResponse2001](200)
      

}

